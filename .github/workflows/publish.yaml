name: Publish
on:
  release:
    types: [created]

jobs:

  publish-github:
    strategy:
      matrix:
        os: [ "macos-latest", "ubuntu-latest", "macos-13" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Find target file
        id: set-target-file
        run: |
          echo buildFile=$(cargo build --release --message-format json | jq -r 'select(.reason=="compiler-artifact") | select(.target.kind==["bin"]) | .filenames[0]') >> "$GITHUB_OUTPUT"
          if [ ${{ runner.os }} == 'Windows' ]; then
            echo "fileExtension=.exe" >> "$GITHUB_OUTPUT"
          else
            echo "fileExtension=" >> "$GITHUB_OUTPUT"
          fi          

      - name: Set output file
        id: set-artifact-file
        run: |
          echo "filename=dshackle-archive-${RUNNER_OS,,}-${RUNNER_ARCH,,}${{ steps.set-target-file.outputs.fileExtension }}" >> "$GITHUB_OUTPUT"
        env:
          RUNNER_OS: ${{ runner.os }}
          RUNNER_ARCH: ${{ runner.arch }}

      - name: Rename file
        run: |
          mkdir upload
          cp ${{ steps.set-target-file.outputs.buildFile }} upload/${{ steps.set-artifact-file.outputs.filename }}          

      - name: Upload Release
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          file: upload/${{ steps.set-artifact-file.outputs.filename }}
